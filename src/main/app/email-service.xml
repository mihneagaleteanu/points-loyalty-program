<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:spring-security="http://www.mulesoft.org/schema/mule/spring-security"
  	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd 
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	<spring:beans>
        <security:authentication-manager alias="basicAuthEmail">  
            <security:authentication-provider> 
                <security:user-service id="authServiceEmail">                     
                    <security:user name="admin" password="admin" locked="true" authorities="ROLE_ADMIN"/>
                    <security:user name="${api.user}" password="${api.password}" authorities="ROLE_USER"/>  
                </security:user-service> 
            </security:authentication-provider> 
        </security:authentication-manager>
    </spring:beans>
    <spring-security:security-manager>
        <spring-security:delegate-security-provider name="memory-provider-email" delegate-ref="basicAuthEmail"/>
    </spring-security:security-manager>
    <flow name="send-email" doc:name="send-email">
        <http:inbound-endpoint exchange-pattern="request-response" host="0.0.0.0" port="${http.port}" path="emails" doc:name="HTTP">
        	<spring-security:http-security-filter realm="Enter valide user credentials to access the api service" securityProviders="memory-provider-email"/>
        </http:inbound-endpoint>
        <enricher doc:name="Message Enricher" source="#[payload]" target="#[flowVars.token]">
            <flow-ref name="get-token" doc:name="Flow Reference"/>
        </enricher>
        <message-properties-transformer doc:name="Message Properties">
            <add-message-property key="Content-Type" value="application/json"/>
            <add-message-property key="Authorization" value="#[flowVars.token]"/>
        </message-properties-transformer>
        <set-payload value="{&quot;To&quot;:{&quot;Address&quot;:&quot;#[json:toAddress]&quot;,&quot;SubscriberKey&quot;:&quot;#[json:toAddress]&quot;,&quot;ContactAttributes&quot;:{&quot;SubscriberAttributes&quot;:#[json:content/tokens]}}}" doc:name="Set Payload"/>
        <https:outbound-endpoint exchange-pattern="request-response" host="www.exacttargetapis.com" port="443" path="messaging/v1/messageDefinitionSends/key:plp_gift_confirmation/send" method="POST" doc:name="Send Email"/>
    </flow>
    <flow name="get-token" doc:name="get-token">
        <set-payload value="{&quot;clientId&quot;:&quot;${email.client.id}&quot;,&quot;clientSecret&quot;:&quot;${email.client.secret}&quot;}" doc:name="Set Payload"/>
        <https:outbound-endpoint exchange-pattern="request-response" host="auth.exacttargetapis.com" port="443" path="v1/requestToken" method="POST" doc:name="Get Token" contentType="application/json"/>
        <set-payload value="Bearer #[json:accessToken]" doc:name="Set Payload"/>
    </flow>
</mule>
